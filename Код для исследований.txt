public class JvmComprehension {     //ClassLoader, память под класс выделяется в метаспейсе

    public static void main(String[] args) { //создается фрейм main() в стеке 
        int i = 1;                      // 1. в стеке создается переменная
        Object o = new Object();        // 2. вызываем конструктор, в куче создается объект, в стеке ссылка присваивается переменной о
        Integer ii = 2;                 // 3. в стеке содается переменная 
        printAll(o, i, ii);             // 4. в стеке создается новый фрейм printAll()
        System.out.println("finished"); // 7. создается фрейм с методом, куда передается значение метода и фрейм удаляется после выполнения метода.
    }

    private static void printAll(Object o, int i, Integer ii) { //4.1 создаются в стеке ссылка на объект и переменные уже во фрейме printAll()
        Integer uselessVar = 700;                   // 5. в стеке фрейма создается переменная
        System.out.println(o.toString() + i + ii);  // 6. создается новый фрейм, куда передются значения метода. конструктор toString отправляется в кучу, а ссылка переданная через переменную отправляется во фрейм метода. После выполнения метода фрейм из стека будет удален
                                                    
    }

}

После выхода из метода printAll фрейм выделенный под него будет удален
После выполения метода main() фрейм, выделенный пол него также будет удален